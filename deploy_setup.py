"""
Script de configuration pour le d√©ploiement sur Vercel
"""
import os
import subprocess
import sqlite3
from pathlib import Path

def setup_for_deployment():
    """Pr√©pare le projet pour le d√©ploiement"""
    print("üöÄ Configuration pour le d√©ploiement Vercel...")
    
    # Cr√©er les r√©pertoires n√©cessaires
    static_build_dir = Path('staticfiles_build')
    static_build_dir.mkdir(exist_ok=True)
    
    media_dir = static_build_dir / 'media'
    media_dir.mkdir(exist_ok=True)
    
    static_dir = static_build_dir / 'static'
    static_dir.mkdir(exist_ok=True)
    
    print("‚úÖ R√©pertoires cr√©√©s")
    
    # Cr√©er la base de donn√©es et les migrations
    try:
        print("üìä Application des migrations...")
        subprocess.run(['python', 'manage.py', 'makemigrations'], check=True)
        subprocess.run(['python', 'manage.py', 'migrate'], check=True)
        print("‚úÖ Migrations appliqu√©es")
        
        # Collecter les fichiers statiques
        print("üìÅ Collection des fichiers statiques...")
        subprocess.run(['python', 'manage.py', 'collectstatic', '--noinput'], check=True)
        print("‚úÖ Fichiers statiques collect√©s")
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erreur lors de la configuration: {e}")
        return False
    
    print("üéâ Configuration termin√©e avec succ√®s!")
    return True

def create_sample_data():
    """Cr√©e des donn√©es d'exemple pour le portfolio"""
    print("üìù Cr√©ation de donn√©es d'exemple...")
    
    # Importer Django
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'portfolio_site.settings')
    import django
    django.setup()
    
    from portfolio.models import Profile, Project, Skill, Experience
    
    try:
        # Cr√©er le profil
        profile, created = Profile.objects.get_or_create(
            defaults={
                'name': 'Cheikhna Ely Cheikh Ndiaye',
                'title': 'D√©veloppeur Fullstack',
                'bio': 'D√©veloppeur passionn√© avec une expertise en Django, React et technologies modernes.',
                'location': 'France',
                'email': 'cheikhna.ndiaye1@gmail.com',
                'linkedin_url': 'https://www.linkedin.com/in/cheikhna-ndiaye-ba0007163',
                'github_url': 'https://github.com/Ely724',
                'is_available_for_work': True,
            }
        )
        
        if created:
            print("‚úÖ Profil cr√©√©")
        
        # Cr√©er quelques comp√©tences
        skills_data = [
            {'name': 'Python', 'category': 'backend', 'proficiency': 90},
            {'name': 'Django', 'category': 'backend', 'proficiency': 85},
            {'name': 'JavaScript', 'category': 'frontend', 'proficiency': 80},
            {'name': 'React', 'category': 'frontend', 'proficiency': 75},
            {'name': 'HTML/CSS', 'category': 'frontend', 'proficiency': 90},
            {'name': 'PostgreSQL', 'category': 'database', 'proficiency': 80},
        ]
        
        for skill_data in skills_data:
            skill, created = Skill.objects.get_or_create(
                name=skill_data['name'],
                defaults=skill_data
            )
            if created:
                print(f"‚úÖ Comp√©tence '{skill.name}' cr√©√©e")
        
        # Cr√©er un projet d'exemple
        project, created = Project.objects.get_or_create(
            title="Portfolio Django",
            defaults={
                'short_description': 'Portfolio moderne avec Django et Tailwind CSS',
                'description': 'Un portfolio complet d√©velopp√© avec Django, int√©grant une interface d\'administration, un syst√®me de contact par email, et un design responsive moderne.',
                'technologies': 'Django, Python, Tailwind CSS, JavaScript, HTML/CSS',
                'github_url': 'https://github.com/Ely724',
                'is_featured': True,
            }
        )
        
        if created:
            print("‚úÖ Projet d'exemple cr√©√©")
        
        print("üéâ Donn√©es d'exemple cr√©√©es avec succ√®s!")
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la cr√©ation des donn√©es: {e}")

if __name__ == "__main__":
    print("üîß SETUP DE D√âPLOIEMENT VERCEL")
    print("=" * 50)
    
    if setup_for_deployment():
        create_sample_data()
        print("\nüöÄ Projet pr√™t pour le d√©ploiement sur Vercel!")
        print("\n√âtapes suivantes:")
        print("1. Installez Vercel CLI: npm i -g vercel")
        print("2. Connectez-vous: vercel login")
        print("3. D√©ployez: vercel --prod")
    else:
        print("\n‚ùå √âchec de la configuration")